#include <sys/types.h> 
#include <sys/socket.h>
#include <stdio.h>
#include <errno.h>
#include <string.h>
#include <unistd.h>
#include <netpacket/packet.h>
#include <netinet/in.h>


#define SERVPORT 3333
#define BACKLOG 10
#define MAX_CONNECTED_NO 10
#define MAXDATASIZE 100

int int main()
{
	struct sockaddr_in server_sockaddr,client_sockaddr;

	int sin_size, recvBYTES;
	int sockfd,client_fd;

	char buf[MAXDATASIZE];

	/*
	建立 socket 连接
	 */
	if ((sockfd == socket(AF_INET,SOCK_STREAM,0))== -1)
	{
		perror("socket");
		exit(1);
	}

	printf("socket success!, sockfd=%d\n", sockfd);

	/*设置sockaddr_in结构体中的相关参数*/
	server_sockaddr.sin_family = AF_INET;
	server_sockaddr.sin_port = htons(SERVPORT);
	server_sockaddr.sin_addr = INADDR_ANY;
	bzero(&(server_sockaddr.sin_zero),8)

	/*绑定函数bind*/
	if (bind(sockfd,(struct sockaddr *)&server_sockaddr,sizeof(struct sockaddr))==-1)
	{
		perror("bind");
		exit(1);
	}

	printf("bind success!\n");

	/*调用listen函数*/
	if (listen(sockfd，BACKLOG)==-1)
	{
		perror("listen");
		exit(1);
	}

	printf("listening...\n");

	/*调用accept函数，等待客户端的连接*/
	if ((client_fd = accept(sockfd,(struct sockaddr *)&client_sockaddr,&sin_size))==-1)
	{
		perror("accept");
		exit(1);
	}

	/*调用recv函数，接收客户端的请求*/
	if ((reccvbytes = recv(client_fd,buf,MAXDATASIZE,0)) == -1)
	{
		perror("recv");
		exit(1);
	}

	printf("received a connecton:%s\n" ,buf);

	close(sockfd);

}